
@{
    ViewData["Title"] = "Addresses";
}

<h1>Addresses</h1>

<select id="cities">

</select>
<select id="districts">

</select>

<select id="roads"></select>
@section Scripts{
    <script>
        const xhr = new XMLHttpRequest();
        //xhr.open('GET', '/api/cities');
        xhr.open('GET', '@Url.Content("~/api/cities")');
        xhr.send();
        xhr.addEventListener('load', () => {
            const datas = JSON.parse(xhr.responseText);
            const cities = datas.map(city => {
                return (`<option value="${city}">${city}</option>`)
            })
            document.querySelector('#cities').innerHTML = cities.join("");
        })

        //先找到要控制的對象
        const citis = document.querySelector('#cities');
        //在甚麼的行為下
        citis.addEventListener('change', () => {
            //要做甚麼事=>透過XMLHttpRequest物件對伺服器發出要求(Request)以及接受伺服器回應(Response)的資料

            //第一步 建立Ajaxs物件
            const xhr1 = new XMLHttpRequest();
            //第二步 對伺服器發出要求
            console.log(citis.value)
            //xhr1.open('GET', `/api/Districts?city=${citis.value}`);//大小寫都ok
            xhr1.open('GET', `@Url.Content("/api/Districts?city=")${citis.value}`);//大小寫都ok
            xhr1.send();

            //第三步 接受伺服器回應(Response)的資料
            //load事件表示伺服器已經回應資料了
            xhr1.addEventListener('load', () => {
                //接收資料
                const datas = JSON.parse(xhr1.responseText);
                const districts = datas.map(city => {
                    return (`<option value="${city}">${city}</option>`);
                })
                document.querySelector('#districts').innerHTML = districts.join("");
            })

        })

        const districts = document.querySelector("#districts");
        districts.addEventListener('change',()=>{
            const xhr2 = new XMLHttpRequest();

            console.log(districts.value);
            xhr2.open('GET', `@Url.Content("/api/Roads?District=")${districts.value}`);//大小寫都ok
            xhr2.send();

            //第三步 接受伺服器回應(Response)的資料
            //load事件表示伺服器已經回應資料了
            xhr2.addEventListener('load', () => {
                //接收資料
                const datas = JSON.parse(xhr2.responseText);
                const roads = datas.map(road => {
                    return (`<option value="${road}">${road}</option>`)
                })
                document.querySelector('#roads').innerHTML = roads.join("");
            })
        })
    </script>

    }
@section Styles{

}

